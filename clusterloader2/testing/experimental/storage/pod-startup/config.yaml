# ASSUMPTIONS:
# - Number of nodes should be divisible by NODES_PER_NAMESPACE (default 100).
# - If using Persistent Volumes, the default storage class must have volumeBindingMode: Immediate

# Cluster Variables
  {{$NODE_MODE := DefaultParam .NODE_MODE "allnodes"}}
  {{$NODES_PER_NAMESPACE := DefaultParam .NODES_PER_NAMESPACE 100}}

# Test Variales
  {{$TEST_NAME := DefaultParam .TEST_NAME "generic-test"}}
  {{$PODS_PER_NODE := .PODS_PER_NODE}}
  {{$POD_TEMPLATE_PATH := .POD_TEMPLATE_PATH }}
  {{$VOLUMES_PER_POD := .VOLUMES_PER_POD}}
  {{$VOLUME_TEMPLATE_PATH := .VOLUME_TEMPLATE_PATH}}
  {{$PROVISION_VOLUME := DefaultParam .PROVISION_VOLUME false}}
  {{$VOL_SIZE := DefaultParam .VOL_SIZE "8Gi"}}
  {{$WAIT_FOR_PVC := DefaultParam .WAIT_FOR_PVC false}}
  # TODO(hantaowang): remove knob after deciding on right values
  {{$POD_STARTUP_TIMEOUT := DefaultParam .POD_STARTUP_TIMEOUT "15m"}}
  {{$POD_STARTUP_SLO := DefaultParam .POD_STARTUP_SLO 300}}

# Computed Variables
  {{$namespaces := DivideInt .Nodes $NODES_PER_NAMESPACE | MaxInt 1}}
  {{$totalPods := MultiplyInt $namespaces $NODES_PER_NAMESPACE $PODS_PER_NODE}}
  {{$podsPerNamespace := MultiplyInt $NODES_PER_NAMESPACE $PODS_PER_NODE}}
  {{$volumesPerNamespace := MultiplyInt $podsPerNamespace $VOLUMES_PER_POD}}
  {{$totalVols := MultiplyInt $volumesPerNamespace $namespaces}}
  {{$PVCBoundTime := MultiplyInt $totalVols 2 | MaxInt 60}}


name: storage-{{$TEST_NAME}}
automanagedNamespaces: {{$namespaces}}
tuningSets:
  - name: Sequence
    parallelismLimitedLoad:
      parallelismLimit: 1
steps:
# Start measurements
- measurements:
  - Identifier: APIResponsiveness
    Method: APIResponsiveness
    Params:
      action: reset
  - Identifier: APIResponsivenessPrometheus
    Method: APIResponsivenessPrometheus
    Params:
      action: start
  - Identifier: TestMetrics
    Method: TestMetrics
    Params:
      action: start
      nodeMode: {{$NODE_MODE}}
  - Identifier: PodWithVolumesStartupLatency
    Method: PodStartupLatency
    Params:
      action: start
      labelSelector: group = volume-test
      threshold: {{$POD_STARTUP_SLO}}s
{{ if $PROVISION_VOLUME }}
# Provision volumes
- phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: {{$volumesPerNamespace}}
    tuningSet: Sequence
    objectBundle:
    - basename: vol
      objectTemplatePath: {{$VOLUME_TEMPLATE_PATH}}
      templateFillMap:
        Group: volume-test
        VolSize: {{$VOL_SIZE}}
{{ end }}
{{ if $WAIT_FOR_PVC }}
- measurements:
  - Identifier: WaitForPVCsToBeBound
    Method: WaitForBoundPVCs
    Params:
      desiredPVCCount: {{$totalVols}}
      apiVersion: v1
      labelSelector: group = volume-test
      timeout: {{$PVCBoundTime}}s
{{ end }}
# Create pods
- phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: {{$podsPerNamespace}}
    tuningSet: Sequence
    objectBundle:
    - basename: pod
      objectTemplatePath: {{$POD_TEMPLATE_PATH}}
      templateFillMap:
        Group: volume-test
        VolumesPerPod: {{$VOLUMES_PER_POD}}
- measurements:
  - Identifier: WaitForRunningPodsWithVolumes
    Method: WaitForRunningPods
    Params:
      desiredPodCount: {{$totalPods}}
      labelSelector: group = volume-test
      timeout: {{$POD_STARTUP_TIMEOUT}}
# Delete pods
- phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: 0
    tuningSet: Sequence
    objectBundle:
    - basename: pod
      objectTemplatePath: {{$POD_TEMPLATE_PATH}}
- measurements:
    - Identifier: WaitForTestPodsDeleted
      Method: WaitForRunningPods
      Params:
        desiredPodCount: 0
        labelSelector: group = volume-test
        timeout: {{$POD_STARTUP_TIMEOUT}}
{{ if $PROVISION_VOLUME }}
# Delete volumes
- phases:
  - namespaceRange:
      min: 1
      max: {{$namespaces}}
    replicasPerNamespace: 0
    tuningSet: Sequence
    objectBundle:
      - basename: vol
        objectTemplatePath: {{$VOLUME_TEMPLATE_PATH}}
{{ end }}
{{ if $WAIT_FOR_PVC }}
- measurements:
    - Identifier: WaitForPVCsToBeBound
      Method: WaitForBoundPVCs
      Params:
        desiredPVCCount: 0
        apiVersion: v1
        labelSelector: group = volume-test
        timeout: {{$PVCBoundTime}}s
{{ end }}
# Collect measurements
- measurements:
  - Identifier: APIResponsiveness
    Method: APIResponsiveness
    Params:
      action: gather
  - Identifier: APIResponsivenessPrometheus
    Method: APIResponsivenessPrometheus
    Params:
      action: gather
  - Identifier: TestMetrics
    Method: TestMetrics
    Params:
      action: gather
  - Identifier: PodWithVolumesStartupLatency
    Method: PodStartupLatency
    Params:
      action: gather
